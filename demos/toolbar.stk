;;;;
;;;; toolbar.stk	-- GTklos Toolbars Implementation
;;;; 
;;;; Copyright © 2002-2009 Erick Gallesio - I3S-CNRS/ESSI <eg@unice.fr>
;;;; 
;;;; 
;;;; This program is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 2 of the License, or
;;;; (at your option) any later version.
;;;; 
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;; 
;;;; You should have received a copy of the GNU General Public License
;;;; along with this program; if not, write to the Free Software
;;;; Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, 
;;;; USA.
;;;; 
;;;;           Author: Erick Gallesio [eg@unice.fr]
;;;;    Creation date:  7-Apr-2002 14:23 (eg)
;;;; Last file update: 19-Sep-2009 23:24 (eg)
;;;;


(include "gtklos-demo.stk")


(define *toolbar-msg* "
Toolbar Demo

In this demo, the tool bar is contained in a frame.
Using the radio buttons, at the bottom of this window
allows to change the orientation of the tool bar, as well as
its appearance.
")


(define (tb-callback name)
  (lambda (_)
    (eprintf "You have clicked on item ~S of the toolbar\n" name)))


(define (main args)
  (let* ((win  (make <demo-window> :title "Toolbar Demo" :x 100 :y 100
		     :file "toolbar" :border-width 10 :padding 10
		     :expand #t :fill #t 
		     :message *toolbar-msg*))
	 (box1 (make <vbox> :parent win :expand #t :fill #t :homogeneous #f))
	 (frm  (make <frame> :title  "Toolbar Example" :parent box1))
	 (tb   (make <toolbar>
		 :parent frm
		 :style "both" :relief "none" :space-style "line" 
		 :orientation 'horizontal))
	 (box2 (make <hbox> :parent box1 :padding 10))
	 (r1  (make <radio-button>
		:parent box2
		:width 140
		:title "Orientation"
		:texts '("horizontal" "vertical")
		:command (lambda (e)
			   (set! (orientation tb)
			     (string->symbol (text (event-widget e)))))))
	 (r2  (make <radio-button>
		    :parent box2
		    :width 140
		    :title "Style"
		    :value "both"
		    :texts '("icons"  "text" "both" "both-horizontal")
		    :command (lambda (e)
			       (set! (toolbar-style tb)
				 (string->symbol (text (event-widget e))))))))

    ;; Populate the toolbar
    (add-toolbar-items tb `(
	(:text "Up"    :image "images/up.png"    :command ,(tb-callback "Up"))
	(:text "Down"  :image "images/down.png"  :command ,(tb-callback "Down"))
	()   ; a space (by convention)
	(:text "Left"  :image "images/left.png"  :command ,(tb-callback "Left")
	 :tooltip "Go Left")
	(:text "Right" :image "images/right.png" :command ,(tb-callback "Right")
	 :tooltip "Go Right")))
    (gtk-main)))
