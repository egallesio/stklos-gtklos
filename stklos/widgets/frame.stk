;;;;
;;;; frame.stk					-- GTklos frame widget
;;;; 
;;;; Copyright © 2001-2009 Erick Gallesio - I3S-CNRS/ESSI <eg@unice.fr>
;;;; 
;;;; 
;;;; This program is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 2 of the License, or
;;;; (at your option) any later version.
;;;; 
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;; 
;;;; You should have received a copy of the GNU General Public License
;;;; along with this program; if not, write to the Free Software
;;;; Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, 
;;;; USA.
;;;; 
;;;;           Author: Erick Gallesio [eg@unice.fr]
;;;;    Creation date: 11-Jul-2001 12:09 (eg)
;;;; Last file update: 13-Aug-2009 11:49 (eg)
;;;;


(define (%title-justify-get o)
  (let ((value (%gtk-get-property (slot-ref o 'wid) "label-xalign")))
    (cond
      ((< value 0.3) 'left)
      ((> value 0.7) 'right)
      (else          'center))))

(define (%title-justify-set! o v)
  (%gtk-set-property! (slot-ref o 'wid)
		      "label_xalign"
		      (case v
			((left)   0.02)
			((center) 0.50)
			((right)  0.98)
			(else     v))))


(define (%frame-shadow-get o)
  (case (gtk-frame-get-shadow-type (slot-ref o 'wid))
    ((0) 'none)
    ((1) 'in)
    ((2) 'out)
    ((3) 'etched-in)
    ((4) 'etched-out)))

(define (%frame-shadow-set! o v)
  (gtk-frame-set-shadow-type (slot-ref o 'wid)
			     (case v
			       ((none) 	0)
			       ((in)   	1)
			       ((out)  	2)
			       ((etched-in) 	3)
			       ((etched-out)	4)
			       (else	        0))))
;======================================================================
;
;	              C l a s s    < f r a m e >
;
;======================================================================

(define-class <frame> (<gtk-container>)
  ((title-justify :accessor	title-justify
		  :init-keyword	:title-justify
		  :allocation	:virtual
		  :slot-ref	%title-justify-get
		  :slot-set!	%title-justify-set!)
   (shadow	  :accessor	shadow
		  :init-keyword	:shadow	
		  :allocation	:virtual
		  :slot-ref	%frame-shadow-get
		  :slot-set!	%frame-shadow-set!)
   (title	  :accessor	title
		  :init-keyword	:title
		  :allocation	:gtk-property
		  :gtk-name	"label")))

;; **********************************************************************

(define-method realize-widget ((self <frame>) initargs)
  (let ((f (gtk-frame-new "")))
    (cpointer-type-set! f 'gtk-frame)
    (slot-set! self 'wid f)))
